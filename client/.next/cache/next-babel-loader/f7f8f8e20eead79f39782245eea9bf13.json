{"ast":null,"code":"var _jsxFileName = \"/app/src/SignMeUp.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useContext } from \"react\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { ConfigContext } from \"./App\";\nimport { inspect } from 'util';\n\nconst SignMeUp = ({\n  signupCallback\n}) => {\n  useEffect(() => {\n    console.log(`SignMeUp:useEffect called`);\n  });\n  const {\n    0: email,\n    1: setEmail\n  } = useState();\n  const {\n    0: emailValid,\n    1: setEmailValid\n  } = useState(false);\n  const {\n    0: sendProcessing,\n    1: setSendProcessing\n  } = useState(false);\n  const context = useContext(ConfigContext);\n\n  function validateEmail(email) {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  }\n\n  const notify = () => {\n    toast.info(`You will be notified of upcoming events ${email}`);\n  };\n\n  function sendEmailToBackend() {\n    setSendProcessing(true);\n    new Promise(function (resolve) {\n      setTimeout(function () {\n        setSendProcessing(false);\n        setEmail(\"\");\n        resolve();\n      }, 1000);\n    }).then(() => {\n      notify();\n      signupCallback(email);\n      setEmail(\"\");\n    });\n  }\n\n  const buttonText = sendProcessing ? \"processing...\" : \"Get Updates\"; //console.log('src/SignMeUp ConfigContext=%s', JSON.stringify(ConfigContext, null, 2))\n  //console.log('\\nsrc/SignMeUp ConfigContext=%s', inspect(ConfigContext));\n  //console.log(\"src/SignMeUp ConfigContext.showSignMeUp=%s\", ConfigContext.showSignMeUp);\n\n  if (context.loggedInUserEmail) {\n    return __jsx(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, \"Logged in User Email: \", context.loggedInUserEmail), \"\\xA0\\xA0\\xA0\", __jsx(\"a\", {\n      href: \"/logout\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, \"Logout\")));\n  }\n\n  return context.showSignMeUp === false ? null : __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, __jsx(ToastContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    value: email,\n    onChange: e => {\n      setEmailValid(validateEmail(e.target.value));\n      return setEmail(e.target.value);\n    },\n    placeholder: \"Enter Email\",\n    type: \"email\",\n    name: \"email\",\n    required: true,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }), \"\\xA0\", __jsx(\"button\", {\n    disabled: !emailValid || sendProcessing,\n    className: \"btn\",\n    onClick: sendEmailToBackend,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, buttonText), \"\\xA0\\xA0\", __jsx(\"a\", {\n    href: \"login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 23\n    }\n  }, \"Login\"))));\n};\n\nexport default SignMeUp;","map":{"version":3,"sources":["/app/src/SignMeUp.js"],"names":["React","useState","useEffect","useContext","ToastContainer","toast","ConfigContext","inspect","SignMeUp","signupCallback","console","log","email","setEmail","emailValid","setEmailValid","sendProcessing","setSendProcessing","context","validateEmail","re","test","notify","info","sendEmailToBackend","Promise","resolve","setTimeout","then","buttonText","loggedInUserEmail","showSignMeUp","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { ConfigContext } from \"./App\";\nimport { inspect } from 'util';\n\nconst SignMeUp = ({ signupCallback }) => {\n  useEffect(() => {\n    console.log(`SignMeUp:useEffect called`);\n  });\n\n  const [email, setEmail] = useState();\n  const [emailValid, setEmailValid] = useState(false);\n  const [sendProcessing, setSendProcessing] = useState(false);\n\n  const context = useContext(ConfigContext);\n\n  function validateEmail(email) {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  }\n\n  const notify = () => {\n    toast.info(`You will be notified of upcoming events ${email}`);\n  };\n\n  function sendEmailToBackend() {\n    setSendProcessing(true);\n    new Promise(function (resolve) {\n      setTimeout(function () {\n        setSendProcessing(false);\n        setEmail(\"\");\n        resolve();\n      }, 1000);\n    }).then(() => {\n      notify();\n      signupCallback(email);\n      setEmail(\"\");\n    });\n  }\n\n  const buttonText = sendProcessing ? \"processing...\" : \"Get Updates\";\n\n  //console.log('src/SignMeUp ConfigContext=%s', JSON.stringify(ConfigContext, null, 2))\n  //console.log('\\nsrc/SignMeUp ConfigContext=%s', inspect(ConfigContext));\n  //console.log(\"src/SignMeUp ConfigContext.showSignMeUp=%s\", ConfigContext.showSignMeUp);\n\n  if (context.loggedInUserEmail) {\n    return (\n      <div className=\"container\">\n        <div className=\"content\">\n          <span>Logged in User Email: {context.loggedInUserEmail}</span>&nbsp;&nbsp;&nbsp;\n          <a href='/logout'>Logout</a>\n        </div>\n      </div>\n    );\n\n  }\n\n  return context.showSignMeUp === false ? null : (\n    <div className=\"container\">\n      <div>\n        <ToastContainer />\n        <div className=\"content\">\n          <input\n            value={email}\n            onChange={e => {\n              setEmailValid(validateEmail(e.target.value));\n              return setEmail(e.target.value);\n            }}\n            placeholder=\"Enter Email\"\n            type=\"email\"\n            name=\"email\"\n            required\n            required\n          />\n          &nbsp;\n          <button\n            disabled={!emailValid || sendProcessing}\n            className=\"btn\"\n            onClick={sendEmailToBackend}\n            type=\"submit\"\n          >\n            {buttonText}\n          </button>\n          &nbsp;&nbsp;<a href=\"login\">Login</a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SignMeUp;"]},"metadata":{},"sourceType":"module"}