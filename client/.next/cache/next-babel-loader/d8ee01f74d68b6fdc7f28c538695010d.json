{"ast":null,"code":"var _jsxFileName = \"/app/pages/_app.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\nimport App from \"next/app\";\nimport ls from \"local-storage\";\nexport default class MyApp extends App {\n  static async getInitialProps({\n    Component,\n    router,\n    ctx\n  }) {\n    let pageProps = {\n      user: {},\n      isServer: false\n    };\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx);\n    }\n\n    const isServer = !!ctx.req;\n\n    if (isServer) {\n      if (ctx.req.user) {\n        console.log(`_app.js:getInitialProps:ctx.req.user \\n${JSON.stringify(ctx.req.user, null, 2)} Exists`);\n\n        if (ctx && ctx.req && ctx.req.user) {\n          pageProps.user = ctx.req.user;\n        }\n      }\n\n      if (pageProps && pageProps.isServer) {\n        pageProps.isServer = true;\n      }\n    } else {\n      //  get from local storage\n      let user;\n\n      try {\n        user = ls.get(\"userInfo\");\n      } catch (e) {\n        user = {};\n      }\n\n      if (pageProps) {\n        pageProps.user = user;\n      }\n    }\n\n    return {\n      pageProps\n    };\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    const isBrowser = false; // this means that we are now running on client but it is first page load, not\n    // a redirect to this page\n\n    if (pageProps && pageProps.isServer && isBrowser) {\n      ls.set(\"userInfo\", pageProps.user);\n    }\n\n    return __jsx(Component, _extends({}, pageProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/app/pages/_app.js"],"names":["React","App","ls","MyApp","getInitialProps","Component","router","ctx","pageProps","user","isServer","req","console","log","JSON","stringify","get","e","render","props","isBrowser","set"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,OAAOC,EAAP,MAAe,eAAf;AAEA,eAAe,MAAMC,KAAN,SAAoBF,GAApB,CAAwB;AACrC,eAAaG,eAAb,CAA6B;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,MAAb;AAAqBC,IAAAA;AAArB,GAA7B,EAAyD;AACvD,QAAIC,SAAS,GAAG;AACdC,MAAAA,IAAI,EAAE,EADQ;AAEdC,MAAAA,QAAQ,EAAE;AAFI,KAAhB;;AAKA,QAAIL,SAAS,CAACD,eAAd,EAA+B;AAC7BI,MAAAA,SAAS,GAAG,MAAMH,SAAS,CAACD,eAAV,CAA0BG,GAA1B,CAAlB;AACD;;AAED,UAAMG,QAAQ,GAAG,CAAC,CAACH,GAAG,CAACI,GAAvB;;AAEA,QAAID,QAAJ,EAAc;AACZ,UAAIH,GAAG,CAACI,GAAJ,CAAQF,IAAZ,EAAkB;AAChBG,QAAAA,OAAO,CAACC,GAAR,CAAa,0CAAyCC,IAAI,CAACC,SAAL,CAAeR,GAAG,CAACI,GAAJ,CAAQF,IAAvB,EAA6B,IAA7B,EAAmC,CAAnC,CAAsC,SAA5F;;AACA,YAAIF,GAAG,IAAIA,GAAG,CAACI,GAAX,IAAkBJ,GAAG,CAACI,GAAJ,CAAQF,IAA9B,EAAoC;AAClCD,UAAAA,SAAS,CAACC,IAAV,GAAiBF,GAAG,CAACI,GAAJ,CAAQF,IAAzB;AACD;AACF;;AAED,UAAID,SAAS,IAAIA,SAAS,CAACE,QAA3B,EAAqC;AACnCF,QAAAA,SAAS,CAACE,QAAV,GAAqB,IAArB;AACD;AACF,KAXD,MAWO;AACL;AACA,UAAID,IAAJ;;AACA,UAAI;AACFA,QAAAA,IAAI,GAAGP,EAAE,CAACc,GAAH,CAAO,UAAP,CAAP;AACD,OAFD,CAEE,OAAOC,CAAP,EAAU;AACVR,QAAAA,IAAI,GAAG,EAAP;AACD;;AACD,UAAID,SAAJ,EAAe;AACbA,QAAAA,SAAS,CAACC,IAAV,GAAiBA,IAAjB;AACD;AACF;;AACD,WAAO;AAAED,MAAAA;AAAF,KAAP;AACD;;AAEDU,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEb,MAAAA,SAAF;AAAaG,MAAAA;AAAb,QAA2B,KAAKW,KAAtC;AACA,UAAMC,SAAS,QAAf,CAFO,CAIP;AACA;;AACA,QAAIZ,SAAS,IAAIA,SAAS,CAACE,QAAvB,IAAmCU,SAAvC,EAAkD;AAChDlB,MAAAA,EAAE,CAACmB,GAAH,CAAO,UAAP,EAAmBb,SAAS,CAACC,IAA7B;AACD;;AAED,WACE,MAAC,SAAD,eAAeD,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF;AAGD;;AApDoC","sourcesContent":["import React from \"react\";\nimport App from \"next/app\";\nimport ls from \"local-storage\";\n\nexport default class MyApp extends App {\n  static async getInitialProps({ Component, router, ctx }) {\n    let pageProps = {\n      user: {},\n      isServer: false\n    };\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx);\n    }\n\n    const isServer = !!ctx.req;\n\n    if (isServer) {\n      if (ctx.req.user) {\n        console.log(`_app.js:getInitialProps:ctx.req.user \\n${JSON.stringify(ctx.req.user, null, 2)} Exists`);\n        if (ctx && ctx.req && ctx.req.user) {\n          pageProps.user = ctx.req.user;\n        }\n      }\n\n      if (pageProps && pageProps.isServer) {\n        pageProps.isServer = true;\n      }\n    } else {\n      //  get from local storage\n      let user;\n      try {\n        user = ls.get(\"userInfo\");\n      } catch (e) {\n        user = {};\n      }\n      if (pageProps) {\n        pageProps.user = user;\n      }\n    }\n    return { pageProps };\n  }\n\n  render() {\n    const { Component, pageProps } = this.props;\n    const isBrowser = typeof window !== \"undefined\";\n\n    // this means that we are now running on client but it is first page load, not\n    // a redirect to this page\n    if (pageProps && pageProps.isServer && isBrowser) {\n      ls.set(\"userInfo\", pageProps.user);\n    }\n\n    return (\n      <Component {...pageProps} />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}